[
    {
      "name": "NonFungibleFlexDropTokenImpl",
      "type": "impl",
      "interface_name": "flex::marketplace::openedition::interfaces::INonFungibleFlexDropToken::INonFungibleFlexDropToken"
    },
    {
      "name": "core::integer::u256",
      "type": "struct",
      "members": [
        {
          "name": "low",
          "type": "core::integer::u128"
        },
        {
          "name": "high",
          "type": "core::integer::u128"
        }
      ]
    },
    {
      "name": "flex::marketplace::utils::openedition::PhaseDrop",
      "type": "struct",
      "members": [
        {
          "name": "mint_price",
          "type": "core::integer::u256"
        },
        {
          "name": "currency",
          "type": "core::starknet::contract_address::ContractAddress"
        },
        {
          "name": "start_time",
          "type": "core::integer::u64"
        },
        {
          "name": "end_time",
          "type": "core::integer::u64"
        },
        {
          "name": "max_mint_per_wallet",
          "type": "core::integer::u64"
        },
        {
          "name": "phase_type",
          "type": "core::integer::u8"
        }
      ]
    },
    {
      "name": "core::bool",
      "type": "enum",
      "variants": [
        {
          "name": "False",
          "type": "()"
        },
        {
          "name": "True",
          "type": "()"
        }
      ]
    },
    {
      "name": "flex::marketplace::utils::openedition::MultiConfigureStruct",
      "type": "struct",
      "members": [
        {
          "name": "max_supply",
          "type": "core::integer::u64"
        },
        {
          "name": "base_uri",
          "type": "core::felt252"
        },
        {
          "name": "contract_uri",
          "type": "core::felt252"
        },
        {
          "name": "flex_drop",
          "type": "core::starknet::contract_address::ContractAddress"
        },
        {
          "name": "phase_drop",
          "type": "flex::marketplace::utils::openedition::PhaseDrop"
        },
        {
          "name": "new_phase",
          "type": "core::bool"
        },
        {
          "name": "creator_payout_address",
          "type": "core::starknet::contract_address::ContractAddress"
        },
        {
          "name": "fee_recipient",
          "type": "core::starknet::contract_address::ContractAddress"
        },
        {
          "name": "allowed_payers",
          "type": "core::array::Array::<core::starknet::contract_address::ContractAddress>"
        },
        {
          "name": "disallowed_payers",
          "type": "core::array::Array::<core::starknet::contract_address::ContractAddress>"
        }
      ]
    },
    {
      "name": "flex::marketplace::openedition::interfaces::INonFungibleFlexDropToken::INonFungibleFlexDropToken",
      "type": "interface",
      "items": [
        {
          "name": "update_allowed_flex_drop",
          "type": "function",
          "inputs": [
            {
              "name": "allowed_flex_drop",
              "type": "core::array::Array::<core::starknet::contract_address::ContractAddress>"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "name": "mint_flex_drop",
          "type": "function",
          "inputs": [
            {
              "name": "minter",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "quantity",
              "type": "core::integer::u64"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "name": "create_new_phase_drop",
          "type": "function",
          "inputs": [
            {
              "name": "flex_drop",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "phase_detail",
              "type": "flex::marketplace::utils::openedition::PhaseDrop"
            },
            {
              "name": "fee_recipient",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "name": "update_phase_drop",
          "type": "function",
          "inputs": [
            {
              "name": "flex_drop",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "phase_id",
              "type": "core::integer::u64"
            },
            {
              "name": "phase_detail",
              "type": "flex::marketplace::utils::openedition::PhaseDrop"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "name": "update_creator_payout",
          "type": "function",
          "inputs": [
            {
              "name": "flex_drop",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "payout_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "name": "update_payer",
          "type": "function",
          "inputs": [
            {
              "name": "flex_drop",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "payer",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "allowed",
              "type": "core::bool"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "name": "multi_configure",
          "type": "function",
          "inputs": [
            {
              "name": "config",
              "type": "flex::marketplace::utils::openedition::MultiConfigureStruct"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "name": "get_mint_state",
          "type": "function",
          "inputs": [
            {
              "name": "minter",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [
            {
              "type": "(core::integer::u64, core::integer::u64, core::integer::u64)"
            }
          ],
          "state_mutability": "view"
        },
        {
          "name": "get_current_token_id",
          "type": "function",
          "inputs": [],
          "outputs": [
            {
              "type": "core::integer::u256"
            }
          ],
          "state_mutability": "view"
        }
      ]
    },
    {
      "name": "ERC721Impl",
      "type": "impl",
      "interface_name": "openzeppelin::token::erc721::interface::IERC721"
    },
    {
      "name": "core::array::Span::<core::felt252>",
      "type": "struct",
      "members": [
        {
          "name": "snapshot",
          "type": "@core::array::Array::<core::felt252>"
        }
      ]
    },
    {
      "name": "openzeppelin::token::erc721::interface::IERC721",
      "type": "interface",
      "items": [
        {
          "name": "balance_of",
          "type": "function",
          "inputs": [
            {
              "name": "account",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [
            {
              "type": "core::integer::u256"
            }
          ],
          "state_mutability": "view"
        },
        {
          "name": "owner_of",
          "type": "function",
          "inputs": [
            {
              "name": "token_id",
              "type": "core::integer::u256"
            }
          ],
          "outputs": [
            {
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "state_mutability": "view"
        },
        {
          "name": "safe_transfer_from",
          "type": "function",
          "inputs": [
            {
              "name": "from",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "to",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "token_id",
              "type": "core::integer::u256"
            },
            {
              "name": "data",
              "type": "core::array::Span::<core::felt252>"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "name": "transfer_from",
          "type": "function",
          "inputs": [
            {
              "name": "from",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "to",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "token_id",
              "type": "core::integer::u256"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "name": "approve",
          "type": "function",
          "inputs": [
            {
              "name": "to",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "token_id",
              "type": "core::integer::u256"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "name": "set_approval_for_all",
          "type": "function",
          "inputs": [
            {
              "name": "operator",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "approved",
              "type": "core::bool"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "name": "get_approved",
          "type": "function",
          "inputs": [
            {
              "name": "token_id",
              "type": "core::integer::u256"
            }
          ],
          "outputs": [
            {
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "state_mutability": "view"
        },
        {
          "name": "is_approved_for_all",
          "type": "function",
          "inputs": [
            {
              "name": "owner",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "operator",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [
            {
              "type": "core::bool"
            }
          ],
          "state_mutability": "view"
        }
      ]
    },
    {
      "name": "ERC721CamelImpl",
      "type": "impl",
      "interface_name": "openzeppelin::token::erc721::interface::IERC721CamelOnly"
    },
    {
      "name": "openzeppelin::token::erc721::interface::IERC721CamelOnly",
      "type": "interface",
      "items": [
        {
          "name": "balanceOf",
          "type": "function",
          "inputs": [
            {
              "name": "account",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [
            {
              "type": "core::integer::u256"
            }
          ],
          "state_mutability": "view"
        },
        {
          "name": "ownerOf",
          "type": "function",
          "inputs": [
            {
              "name": "tokenId",
              "type": "core::integer::u256"
            }
          ],
          "outputs": [
            {
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "state_mutability": "view"
        },
        {
          "name": "safeTransferFrom",
          "type": "function",
          "inputs": [
            {
              "name": "from",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "to",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "tokenId",
              "type": "core::integer::u256"
            },
            {
              "name": "data",
              "type": "core::array::Span::<core::felt252>"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "name": "transferFrom",
          "type": "function",
          "inputs": [
            {
              "name": "from",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "to",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "tokenId",
              "type": "core::integer::u256"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "name": "setApprovalForAll",
          "type": "function",
          "inputs": [
            {
              "name": "operator",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "approved",
              "type": "core::bool"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "name": "getApproved",
          "type": "function",
          "inputs": [
            {
              "name": "tokenId",
              "type": "core::integer::u256"
            }
          ],
          "outputs": [
            {
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "state_mutability": "view"
        },
        {
          "name": "isApprovedForAll",
          "type": "function",
          "inputs": [
            {
              "name": "owner",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "operator",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [
            {
              "type": "core::bool"
            }
          ],
          "state_mutability": "view"
        }
      ]
    },
    {
      "name": "ERC721Metadata",
      "type": "impl",
      "interface_name": "openzeppelin::token::erc721::interface::IERC721Metadata"
    },
    {
      "name": "openzeppelin::token::erc721::interface::IERC721Metadata",
      "type": "interface",
      "items": [
        {
          "name": "name",
          "type": "function",
          "inputs": [],
          "outputs": [
            {
              "type": "core::array::Array::<core::felt252>"
            }
          ],
          "state_mutability": "view"
        },
        {
          "name": "symbol",
          "type": "function",
          "inputs": [],
          "outputs": [
            {
              "type": "core::array::Array::<core::felt252>"
            }
          ],
          "state_mutability": "view"
        },
        {
          "name": "token_uri",
          "type": "function",
          "inputs": [
            {
              "name": "token_id",
              "type": "core::integer::u256"
            }
          ],
          "outputs": [
            {
              "type": "core::array::Array::<core::felt252>"
            }
          ],
          "state_mutability": "view"
        }
      ]
    },
    {
      "name": "ERC721MetadataCamel",
      "type": "impl",
      "interface_name": "openzeppelin::token::erc721::interface::IERC721MetadataCamelOnly"
    },
    {
      "name": "openzeppelin::token::erc721::interface::IERC721MetadataCamelOnly",
      "type": "interface",
      "items": [
        {
          "name": "tokenURI",
          "type": "function",
          "inputs": [
            {
              "name": "tokenId",
              "type": "core::integer::u256"
            }
          ],
          "outputs": [
            {
              "type": "core::array::Array::<core::felt252>"
            }
          ],
          "state_mutability": "view"
        }
      ]
    },
    {
      "name": "ERC721FlexMetadataImpl",
      "type": "impl",
      "interface_name": "flex::marketplace::openedition::interfaces::IFlexDropContractMetadata::IFlexDropContractMetadata"
    },
    {
      "name": "flex::marketplace::openedition::interfaces::IFlexDropContractMetadata::IFlexDropContractMetadata",
      "type": "interface",
      "items": [
        {
          "name": "set_base_uri",
          "type": "function",
          "inputs": [
            {
              "name": "new_token_uri",
              "type": "core::felt252"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "name": "set_contract_uri",
          "type": "function",
          "inputs": [
            {
              "name": "new_contract_uri",
              "type": "core::felt252"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "name": "set_max_supply",
          "type": "function",
          "inputs": [
            {
              "name": "new_max_supply",
              "type": "core::integer::u64"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "name": "get_base_uri",
          "type": "function",
          "inputs": [],
          "outputs": [
            {
              "type": "core::array::Array::<core::felt252>"
            }
          ],
          "state_mutability": "view"
        },
        {
          "name": "get_contract_uri",
          "type": "function",
          "inputs": [],
          "outputs": [
            {
              "type": "core::array::Array::<core::felt252>"
            }
          ],
          "state_mutability": "view"
        },
        {
          "name": "getContractURI",
          "type": "function",
          "inputs": [],
          "outputs": [
            {
              "type": "core::array::Array::<core::felt252>"
            }
          ],
          "state_mutability": "view"
        },
        {
          "name": "get_max_supply",
          "type": "function",
          "inputs": [],
          "outputs": [
            {
              "type": "core::integer::u64"
            }
          ],
          "state_mutability": "view"
        }
      ]
    },
    {
      "name": "SRC5Impl",
      "type": "impl",
      "interface_name": "openzeppelin::introspection::interface::ISRC5"
    },
    {
      "name": "openzeppelin::introspection::interface::ISRC5",
      "type": "interface",
      "items": [
        {
          "name": "supports_interface",
          "type": "function",
          "inputs": [
            {
              "name": "interface_id",
              "type": "core::felt252"
            }
          ],
          "outputs": [
            {
              "type": "core::bool"
            }
          ],
          "state_mutability": "view"
        }
      ]
    },
    {
      "name": "SRC5CamelImple",
      "type": "impl",
      "interface_name": "openzeppelin::introspection::interface::ISRC5Camel"
    },
    {
      "name": "openzeppelin::introspection::interface::ISRC5Camel",
      "type": "interface",
      "items": [
        {
          "name": "supportsInterface",
          "type": "function",
          "inputs": [
            {
              "name": "interfaceId",
              "type": "core::felt252"
            }
          ],
          "outputs": [
            {
              "type": "core::bool"
            }
          ],
          "state_mutability": "view"
        }
      ]
    },
    {
      "name": "OwnableImpl",
      "type": "impl",
      "interface_name": "openzeppelin::access::ownable::interface::IOwnable"
    },
    {
      "name": "openzeppelin::access::ownable::interface::IOwnable",
      "type": "interface",
      "items": [
        {
          "name": "owner",
          "type": "function",
          "inputs": [],
          "outputs": [
            {
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "state_mutability": "view"
        },
        {
          "name": "transfer_ownership",
          "type": "function",
          "inputs": [
            {
              "name": "new_owner",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "name": "renounce_ownership",
          "type": "function",
          "inputs": [],
          "outputs": [],
          "state_mutability": "external"
        }
      ]
    },
    {
      "name": "constructor",
      "type": "constructor",
      "inputs": [
        {
          "name": "owner",
          "type": "core::starknet::contract_address::ContractAddress"
        },
        {
          "name": "name",
          "type": "core::felt252"
        },
        {
          "name": "symbol",
          "type": "core::felt252"
        },
        {
          "name": "token_base_uri",
          "type": "core::felt252"
        },
        {
          "name": "allowed_flex_drop",
          "type": "core::array::Array::<core::starknet::contract_address::ContractAddress>"
        }
      ]
    },
    {
      "kind": "struct",
      "name": "flex::marketplace::openedition::ERC721_open_edition::ERC721::UpdateAllowedFlexDrop",
      "type": "event",
      "members": [
        {
          "kind": "data",
          "name": "new_flex_drop",
          "type": "core::array::Array::<core::starknet::contract_address::ContractAddress>"
        }
      ]
    },
    {
      "kind": "enum",
      "name": "flex::marketplace::openedition::erc721_metadata::ERC721_metadata::ERC721MetadataComponent::Event",
      "type": "event",
      "variants": []
    },
    {
      "kind": "struct",
      "name": "openzeppelin::token::erc721::erc721::ERC721Component::Transfer",
      "type": "event",
      "members": [
        {
          "kind": "key",
          "name": "from",
          "type": "core::starknet::contract_address::ContractAddress"
        },
        {
          "kind": "key",
          "name": "to",
          "type": "core::starknet::contract_address::ContractAddress"
        },
        {
          "kind": "key",
          "name": "token_id",
          "type": "core::integer::u256"
        }
      ]
    },
    {
      "kind": "struct",
      "name": "openzeppelin::token::erc721::erc721::ERC721Component::Approval",
      "type": "event",
      "members": [
        {
          "kind": "key",
          "name": "owner",
          "type": "core::starknet::contract_address::ContractAddress"
        },
        {
          "kind": "key",
          "name": "approved",
          "type": "core::starknet::contract_address::ContractAddress"
        },
        {
          "kind": "key",
          "name": "token_id",
          "type": "core::integer::u256"
        }
      ]
    },
    {
      "kind": "struct",
      "name": "openzeppelin::token::erc721::erc721::ERC721Component::ApprovalForAll",
      "type": "event",
      "members": [
        {
          "kind": "key",
          "name": "owner",
          "type": "core::starknet::contract_address::ContractAddress"
        },
        {
          "kind": "key",
          "name": "operator",
          "type": "core::starknet::contract_address::ContractAddress"
        },
        {
          "kind": "data",
          "name": "approved",
          "type": "core::bool"
        }
      ]
    },
    {
      "kind": "enum",
      "name": "openzeppelin::token::erc721::erc721::ERC721Component::Event",
      "type": "event",
      "variants": [
        {
          "kind": "nested",
          "name": "Transfer",
          "type": "openzeppelin::token::erc721::erc721::ERC721Component::Transfer"
        },
        {
          "kind": "nested",
          "name": "Approval",
          "type": "openzeppelin::token::erc721::erc721::ERC721Component::Approval"
        },
        {
          "kind": "nested",
          "name": "ApprovalForAll",
          "type": "openzeppelin::token::erc721::erc721::ERC721Component::ApprovalForAll"
        }
      ]
    },
    {
      "kind": "enum",
      "name": "openzeppelin::introspection::src5::SRC5Component::Event",
      "type": "event",
      "variants": []
    },
    {
      "kind": "struct",
      "name": "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferred",
      "type": "event",
      "members": [
        {
          "kind": "data",
          "name": "previous_owner",
          "type": "core::starknet::contract_address::ContractAddress"
        },
        {
          "kind": "data",
          "name": "new_owner",
          "type": "core::starknet::contract_address::ContractAddress"
        }
      ]
    },
    {
      "kind": "enum",
      "name": "openzeppelin::access::ownable::ownable::OwnableComponent::Event",
      "type": "event",
      "variants": [
        {
          "kind": "nested",
          "name": "OwnershipTransferred",
          "type": "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferred"
        }
      ]
    },
    {
      "kind": "enum",
      "name": "openzeppelin::security::reentrancyguard::ReentrancyGuardComponent::Event",
      "type": "event",
      "variants": []
    },
    {
      "kind": "enum",
      "name": "flex::marketplace::openedition::ERC721_open_edition::ERC721::Event",
      "type": "event",
      "variants": [
        {
          "kind": "nested",
          "name": "UpdateAllowedFlexDrop",
          "type": "flex::marketplace::openedition::ERC721_open_edition::ERC721::UpdateAllowedFlexDrop"
        },
        {
          "kind": "flat",
          "name": "ERC721MetadataEvent",
          "type": "flex::marketplace::openedition::erc721_metadata::ERC721_metadata::ERC721MetadataComponent::Event"
        },
        {
          "kind": "flat",
          "name": "ERC721Event",
          "type": "openzeppelin::token::erc721::erc721::ERC721Component::Event"
        },
        {
          "kind": "flat",
          "name": "SRC5Event",
          "type": "openzeppelin::introspection::src5::SRC5Component::Event"
        },
        {
          "kind": "flat",
          "name": "OwnableEvent",
          "type": "openzeppelin::access::ownable::ownable::OwnableComponent::Event"
        },
        {
          "kind": "flat",
          "name": "ReentrancyGuardEvent",
          "type": "openzeppelin::security::reentrancyguard::ReentrancyGuardComponent::Event"
        }
      ]
    }
  ]