[
  {
    "name": "FlexDropImpl",
    "type": "impl",
    "interface_name": "flex::marketplace::openedition::interfaces::IFlexDrop::IFlexDrop"
  },
  {
    "name": "core::bool",
    "type": "enum",
    "variants": [
      {
        "name": "False",
        "type": "()"
      },
      {
        "name": "True",
        "type": "()"
      }
    ]
  },
  {
    "name": "flex::marketplace::utils::openedition::WhiteListParam",
    "type": "struct",
    "members": [
      {
        "name": "phase_id",
        "type": "core::integer::u64"
      },
      {
        "name": "nft_address",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "minter",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  },
  {
    "name": "core::integer::u256",
    "type": "struct",
    "members": [
      {
        "name": "low",
        "type": "core::integer::u128"
      },
      {
        "name": "high",
        "type": "core::integer::u128"
      }
    ]
  },
  {
    "name": "flex::marketplace::utils::openedition::PhaseDrop",
    "type": "struct",
    "members": [
      {
        "name": "mint_price",
        "type": "core::integer::u256"
      },
      {
        "name": "currency",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "start_time",
        "type": "core::integer::u64"
      },
      {
        "name": "end_time",
        "type": "core::integer::u64"
      },
      {
        "name": "max_mint_per_wallet",
        "type": "core::integer::u64"
      },
      {
        "name": "phase_type",
        "type": "core::integer::u8"
      }
    ]
  },
  {
    "name": "flex::marketplace::openedition::interfaces::IFlexDrop::IFlexDrop",
    "type": "interface",
    "items": [
      {
        "name": "mint_public",
        "type": "function",
        "inputs": [
          {
            "name": "nft_address",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "phase_id",
            "type": "core::integer::u64"
          },
          {
            "name": "fee_recipient",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "minter_if_not_payer",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "quantity",
            "type": "core::integer::u64"
          },
          {
            "name": "is_warpcast",
            "type": "core::bool"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "name": "whitelist_mint",
        "type": "function",
        "inputs": [
          {
            "name": "whitelist_data",
            "type": "flex::marketplace::utils::openedition::WhiteListParam"
          },
          {
            "name": "fee_recipient",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "proof",
            "type": "core::array::Array::<core::felt252>"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "name": "start_new_phase_drop",
        "type": "function",
        "inputs": [
          {
            "name": "phase_drop_id",
            "type": "core::integer::u64"
          },
          {
            "name": "phase_drop",
            "type": "flex::marketplace::utils::openedition::PhaseDrop"
          },
          {
            "name": "fee_recipient",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "name": "update_phase_drop",
        "type": "function",
        "inputs": [
          {
            "name": "phase_drop_id",
            "type": "core::integer::u64"
          },
          {
            "name": "phase_drop",
            "type": "flex::marketplace::utils::openedition::PhaseDrop"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "name": "update_creator_payout_address",
        "type": "function",
        "inputs": [
          {
            "name": "new_payout_address",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "name": "update_payer",
        "type": "function",
        "inputs": [
          {
            "name": "payer",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "allowed",
            "type": "core::bool"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      }
    ]
  },
  {
    "name": "pause",
    "type": "function",
    "inputs": [],
    "outputs": [],
    "state_mutability": "external"
  },
  {
    "name": "unpause",
    "type": "function",
    "inputs": [],
    "outputs": [],
    "state_mutability": "external"
  },
  {
    "name": "change_currency_manager",
    "type": "function",
    "inputs": [
      {
        "name": "new_currency_manager",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ],
    "outputs": [],
    "state_mutability": "external"
  },
  {
    "name": "change_protocol_fee_mint",
    "type": "function",
    "inputs": [
      {
        "name": "new_fee_currency",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "new_fee_mint",
        "type": "core::integer::u256"
      }
    ],
    "outputs": [],
    "state_mutability": "external"
  },
  {
    "name": "update_protocol_fee_recipients",
    "type": "function",
    "inputs": [
      {
        "name": "fee_recipient",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "allowed",
        "type": "core::bool"
      }
    ],
    "outputs": [],
    "state_mutability": "external"
  },
  {
    "name": "get_fee_currency",
    "type": "function",
    "inputs": [],
    "outputs": [
      {
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ],
    "state_mutability": "view"
  },
  {
    "name": "get_fee_mint",
    "type": "function",
    "inputs": [],
    "outputs": [
      {
        "type": "core::integer::u256"
      }
    ],
    "state_mutability": "view"
  },
  {
    "name": "get_new_phase_fee",
    "type": "function",
    "inputs": [],
    "outputs": [
      {
        "type": "core::integer::u256"
      }
    ],
    "state_mutability": "view"
  },
  {
    "name": "update_new_phase_fee",
    "type": "function",
    "inputs": [
      {
        "name": "new_fee",
        "type": "core::integer::u256"
      }
    ],
    "outputs": [],
    "state_mutability": "external"
  },
  {
    "name": "update_validator",
    "type": "function",
    "inputs": [
      {
        "name": "new_validator",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ],
    "outputs": [],
    "state_mutability": "external"
  },
  {
    "name": "get_validator",
    "type": "function",
    "inputs": [],
    "outputs": [
      {
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ],
    "state_mutability": "view"
  },
  {
    "name": "update_domain_hash",
    "type": "function",
    "inputs": [
      {
        "name": "new_domain_hash",
        "type": "core::felt252"
      }
    ],
    "outputs": [],
    "state_mutability": "external"
  },
  {
    "name": "get_domain_hash",
    "type": "function",
    "inputs": [],
    "outputs": [
      {
        "type": "core::felt252"
      }
    ],
    "state_mutability": "view"
  },
  {
    "name": "update_signature_checker",
    "type": "function",
    "inputs": [
      {
        "name": "new_signature_checker",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ],
    "outputs": [],
    "state_mutability": "external"
  },
  {
    "name": "get_signature_checker",
    "type": "function",
    "inputs": [],
    "outputs": [
      {
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ],
    "state_mutability": "view"
  },
  {
    "name": "get_phase_drop",
    "type": "function",
    "inputs": [
      {
        "name": "nft_address",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "phase_id",
        "type": "core::integer::u64"
      }
    ],
    "outputs": [
      {
        "type": "flex::marketplace::utils::openedition::PhaseDrop"
      }
    ],
    "state_mutability": "view"
  },
  {
    "name": "get_currency_manager",
    "type": "function",
    "inputs": [],
    "outputs": [
      {
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ],
    "state_mutability": "view"
  },
  {
    "name": "get_protocol_fee_recipients",
    "type": "function",
    "inputs": [
      {
        "name": "fee_recipient",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ],
    "outputs": [
      {
        "type": "core::bool"
      }
    ],
    "state_mutability": "view"
  },
  {
    "name": "get_creator_payout_address",
    "type": "function",
    "inputs": [
      {
        "name": "nft_address",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ],
    "outputs": [
      {
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ],
    "state_mutability": "view"
  },
  {
    "name": "core::array::Span::<core::starknet::contract_address::ContractAddress>",
    "type": "struct",
    "members": [
      {
        "name": "snapshot",
        "type": "@core::array::Array::<core::starknet::contract_address::ContractAddress>"
      }
    ]
  },
  {
    "name": "get_enumerated_allowed_payer",
    "type": "function",
    "inputs": [
      {
        "name": "nft_address",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ],
    "outputs": [
      {
        "type": "core::array::Span::<core::starknet::contract_address::ContractAddress>"
      }
    ],
    "state_mutability": "view"
  },
  {
    "name": "OwnableImpl",
    "type": "impl",
    "interface_name": "openzeppelin::access::ownable::interface::IOwnable"
  },
  {
    "name": "openzeppelin::access::ownable::interface::IOwnable",
    "type": "interface",
    "items": [
      {
        "name": "owner",
        "type": "function",
        "inputs": [],
        "outputs": [
          {
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "state_mutability": "view"
      },
      {
        "name": "transfer_ownership",
        "type": "function",
        "inputs": [
          {
            "name": "new_owner",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "name": "renounce_ownership",
        "type": "function",
        "inputs": [],
        "outputs": [],
        "state_mutability": "external"
      }
    ]
  },
  {
    "name": "PausableImpl",
    "type": "impl",
    "interface_name": "openzeppelin::security::interface::IPausable"
  },
  {
    "name": "openzeppelin::security::interface::IPausable",
    "type": "interface",
    "items": [
      {
        "name": "is_paused",
        "type": "function",
        "inputs": [],
        "outputs": [
          {
            "type": "core::bool"
          }
        ],
        "state_mutability": "view"
      }
    ]
  },
  {
    "name": "constructor",
    "type": "constructor",
    "inputs": [
      {
        "name": "owner",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "currency_manager",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "fee_currency",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "fee_mint",
        "type": "core::integer::u256"
      },
      {
        "name": "new_phase_fee",
        "type": "core::integer::u256"
      },
      {
        "name": "domain_hash",
        "type": "core::felt252"
      },
      {
        "name": "validator",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "signature_checker",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "fee_recipients",
        "type": "core::array::Span::<core::starknet::contract_address::ContractAddress>"
      }
    ]
  },
  {
    "kind": "struct",
    "name": "flex::marketplace::openedition::FlexDrop::FlexDrop::FlexDropMinted",
    "type": "event",
    "members": [
      {
        "kind": "key",
        "name": "nft_address",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "kind": "data",
        "name": "minter",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "kind": "data",
        "name": "fee_recipient",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "kind": "data",
        "name": "payer",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "kind": "data",
        "name": "quantity_minted",
        "type": "core::integer::u64"
      },
      {
        "kind": "data",
        "name": "total_mint_price",
        "type": "core::integer::u256"
      },
      {
        "kind": "data",
        "name": "fee_mint",
        "type": "core::integer::u256"
      },
      {
        "kind": "data",
        "name": "is_warpcast",
        "type": "core::bool"
      }
    ]
  },
  {
    "kind": "struct",
    "name": "flex::marketplace::openedition::FlexDrop::FlexDrop::PhaseDropUpdated",
    "type": "event",
    "members": [
      {
        "kind": "key",
        "name": "nft_address",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "kind": "data",
        "name": "phase_drop_id",
        "type": "core::integer::u64"
      },
      {
        "kind": "data",
        "name": "phase_drop",
        "type": "flex::marketplace::utils::openedition::PhaseDrop"
      }
    ]
  },
  {
    "kind": "struct",
    "name": "flex::marketplace::openedition::FlexDrop::FlexDrop::CreatorPayoutUpdated",
    "type": "event",
    "members": [
      {
        "kind": "key",
        "name": "nft_address",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "kind": "data",
        "name": "new_payout_address",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  },
  {
    "kind": "struct",
    "name": "flex::marketplace::openedition::FlexDrop::FlexDrop::FeeRecipientUpdated",
    "type": "event",
    "members": [
      {
        "kind": "key",
        "name": "nft_address",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "kind": "data",
        "name": "fee_recipient",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "kind": "data",
        "name": "allowed",
        "type": "core::bool"
      }
    ]
  },
  {
    "kind": "struct",
    "name": "flex::marketplace::openedition::FlexDrop::FlexDrop::PayerUpdated",
    "type": "event",
    "members": [
      {
        "kind": "key",
        "name": "nft_address",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "kind": "data",
        "name": "payer",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "kind": "data",
        "name": "allowed",
        "type": "core::bool"
      }
    ]
  },
  {
    "kind": "struct",
    "name": "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferred",
    "type": "event",
    "members": [
      {
        "kind": "key",
        "name": "previous_owner",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "kind": "key",
        "name": "new_owner",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  },
  {
    "kind": "struct",
    "name": "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
    "type": "event",
    "members": [
      {
        "kind": "key",
        "name": "previous_owner",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "kind": "key",
        "name": "new_owner",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  },
  {
    "kind": "enum",
    "name": "openzeppelin::access::ownable::ownable::OwnableComponent::Event",
    "type": "event",
    "variants": [
      {
        "kind": "nested",
        "name": "OwnershipTransferred",
        "type": "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferred"
      },
      {
        "kind": "nested",
        "name": "OwnershipTransferStarted",
        "type": "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferStarted"
      }
    ]
  },
  {
    "kind": "struct",
    "name": "openzeppelin::security::pausable::PausableComponent::Paused",
    "type": "event",
    "members": [
      {
        "kind": "data",
        "name": "account",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  },
  {
    "kind": "struct",
    "name": "openzeppelin::security::pausable::PausableComponent::Unpaused",
    "type": "event",
    "members": [
      {
        "kind": "data",
        "name": "account",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  },
  {
    "kind": "enum",
    "name": "openzeppelin::security::pausable::PausableComponent::Event",
    "type": "event",
    "variants": [
      {
        "kind": "nested",
        "name": "Paused",
        "type": "openzeppelin::security::pausable::PausableComponent::Paused"
      },
      {
        "kind": "nested",
        "name": "Unpaused",
        "type": "openzeppelin::security::pausable::PausableComponent::Unpaused"
      }
    ]
  },
  {
    "kind": "enum",
    "name": "openzeppelin::security::reentrancyguard::ReentrancyGuardComponent::Event",
    "type": "event",
    "variants": []
  },
  {
    "kind": "enum",
    "name": "flex::marketplace::openedition::FlexDrop::FlexDrop::Event",
    "type": "event",
    "variants": [
      {
        "kind": "nested",
        "name": "FlexDropMinted",
        "type": "flex::marketplace::openedition::FlexDrop::FlexDrop::FlexDropMinted"
      },
      {
        "kind": "nested",
        "name": "PhaseDropUpdated",
        "type": "flex::marketplace::openedition::FlexDrop::FlexDrop::PhaseDropUpdated"
      },
      {
        "kind": "nested",
        "name": "CreatorPayoutUpdated",
        "type": "flex::marketplace::openedition::FlexDrop::FlexDrop::CreatorPayoutUpdated"
      },
      {
        "kind": "nested",
        "name": "FeeRecipientUpdated",
        "type": "flex::marketplace::openedition::FlexDrop::FlexDrop::FeeRecipientUpdated"
      },
      {
        "kind": "nested",
        "name": "PayerUpdated",
        "type": "flex::marketplace::openedition::FlexDrop::FlexDrop::PayerUpdated"
      },
      {
        "kind": "flat",
        "name": "OwnableEvent",
        "type": "openzeppelin::access::ownable::ownable::OwnableComponent::Event"
      },
      {
        "kind": "flat",
        "name": "PausableEvent",
        "type": "openzeppelin::security::pausable::PausableComponent::Event"
      },
      {
        "kind": "flat",
        "name": "ReentrancyGuardEvent",
        "type": "openzeppelin::security::reentrancyguard::ReentrancyGuardComponent::Event"
      }
    ]
  }
]